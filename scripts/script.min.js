let projectData=JSON.parse(localStorage.getItem("projectData"))||[],rowHeight=50,sprintWidth=60,colors=["#1a73e8","#34a853","#6B8E23","#009688","#9c27b0","#4682B4"],highlightRow=parseInt(localStorage.getItem("highlightRow"))||1;function saveAndRender(){localStorage.setItem("projectData",JSON.stringify(projectData)),render()}function clearTimeline(){projectData=[],saveAndRender()}function snapToGrid(e){return Math.round(e/sprintWidth)*sprintWidth}function snapToRow(e){return Math.round(e/rowHeight)*rowHeight}function render(){timeline.innerHTML='<div class="timeline-grid"></div>',drawResourceRows(),projectData.forEach(e=>timeline.appendChild(createEpicElement(e))),drawSprintGrid()}function drawResourceRows(){for(let e=0;e<20;e++){var t=document.createElement("div");t.className="resource-row",t.style.top=e*rowHeight+"px",e===highlightRow-1&&t.classList.add("highlight"),timeline.appendChild(t)}}function createEpicElement(e){var t=document.createElement("div");return t.className="epic",t.style.backgroundColor=e.color,t.style.top=e.top+"px",t.style.left=e.left+"px",t.style.width=e.width+"px",t.style.height=e.resourceCount*rowHeight+"px",t.innerHTML=`
        <div style="cursor: text; font-weight: bold;" onclick="startEditingEpicName(${e.id})">${e.name}</div>
        <div class="resize-handle"></div>
        <div class="resize-handle-vertical"></div>
        <div style="position:absolute;bottom:2px;right:4px;background:#444;color:#ffffff;padding:2px 4px;border-radius:3px;font-size:12px;">${e.width/sprintWidth} Sprints</div>
        <div style="position:absolute;bottom:2px;left:4px;background:#444;color:#ffffff;padding:2px 4px;border-radius:3px;font-size:12px;">${e.resourceCount} Res</div>
    `,makeDraggable(t,e),t}function startEditingEpicName(t){var e=projectData.find(e=>e.id===t),i=prompt("Edit Epic Name:",e.name);null!==i&&(e.name=i.trim(),saveAndRender())}function makeDraggable(e,t){e.addEventListener("mousedown",e=>{(e.target.classList.contains("resize-handle")?startResizing:e.target.classList.contains("resize-handle-vertical")?startVerticalResizing:startDragging)(e,t)})}function startDragging(e,i){let n=e.clientX-e.target.getBoundingClientRect().left,o=e.clientY-e.target.getBoundingClientRect().top;document.onmousemove=e=>{var t=snapToGrid(e.clientX-n-timeline.getBoundingClientRect().left),e=snapToRow(e.clientY-o-timeline.getBoundingClientRect().top);checkOverlap(i,t,e,i.width,i.resourceCount)||(i.left=t,i.top=e,saveAndRender())},document.onmouseup=()=>document.onmousemove=null}function startResizing(e,t){let i=e.clientX,n=t.width;document.onmousemove=e=>{e=snapToGrid(Math.max(sprintWidth,n+(e.clientX-i)));checkOverlap(t,t.left,t.top,e,t.resourceCount)||(t.width=e,saveAndRender())},document.onmouseup=()=>document.onmousemove=null,e.stopPropagation()}function startVerticalResizing(e,t){let i=e.clientY,n=t.resourceCount*rowHeight;document.onmousemove=e=>{e=Math.max(rowHeight,n+(e.clientY-i));t.resourceCount=Math.round(e/rowHeight),saveAndRender()},document.onmouseup=()=>document.onmousemove=null,e.stopPropagation()}function checkOverlap(t,i,n,o=t?.width,r=t?.resourceCount){return projectData.some(e=>e.id!==t?.id&&(e.top===n&&e.left<i+o&&e.left+e.width>i||n<e.top+e.resourceCount*rowHeight&&n+r*rowHeight>e.top&&e.left<i+o&&e.left+e.width>i))}function drawSprintGrid(){var t,i=document.querySelector(".timeline-grid"),n=(i.innerHTML="",timeline.scrollWidth),o=timeline.scrollHeight;for(let e=0;e<n;e+=sprintWidth)0<e&&e/sprintWidth%6==0&&((t=document.createElement("div")).className="sprint-border",t.style.left=e+"px",t.style.height=o+"px",i.appendChild(t))}document.getElementById("highlightRowInput").value=highlightRow,document.getElementById("highlightRowInput").addEventListener("input",e=>{highlightRow=parseInt(e.target.value)||1,localStorage.setItem("highlightRow",highlightRow),render()}),document.querySelector(".toolbar-item").addEventListener("dragstart",e=>{e.dataTransfer.setData("type","epic")}),timeline.addEventListener("dragover",e=>e.preventDefault()),timeline.addEventListener("drop",e=>{var t,i;"epic"===e.dataTransfer.getData("type")&&(e=snapToGrid(e.clientX-timeline.getBoundingClientRect().left),t=snapToRow(projectData.length*rowHeight),i=colors[projectData.length%colors.length],checkOverlap(null,e,t,3*sprintWidth)?alert("Cannot place Epic here - overlaps with existing Epic."):(projectData.push({id:Date.now(),name:"New Epic",left:e,top:t,width:3*sprintWidth,resourceCount:1,color:i}),saveAndRender()))}),saveAndRender();